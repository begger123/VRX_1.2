cmake_minimum_required(VERSION 2.8.3)
project(vehicle_control)

# crap out on c++11 check fail
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "-std=c++11")
else()
    message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  dynamic_reconfigure
  rospy
  geometry_msgs
  message_generation
  message_runtime
  roscpp
  std_msgs
  nav_msgs
  custom_messages_biggie
  tf
)

# Non-ROS dependencies
find_package(cmake_modules REQUIRED)
find_package(Eigen REQUIRED)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   geometry_msgs#   std_msgs
# )

################################################
## Declare ROS dynamic reconfigure parameters ##
################################################

## To declare and build dynamic reconfigure parameters within this
## package, follow these steps:
## * In the file package.xml:
##   * add a build_depend and a exec_depend tag for "dynamic_reconfigure"
## * In this file (CMakeLists.txt):
##   * add "dynamic_reconfigure" to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * uncomment the "generate_dynamic_reconfigure_options" section below
##     and list every .cfg file to be processed

## Generate dynamic reconfigure parameters in the 'cfg' folder
generate_dynamic_reconfigure_options(
  cfg/pidGains.cfg
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
# LIBRARIES vehicle_control
# CATKIN_DEPENDS geometry_msgs message_generation message_runtime roscpp std_msgs nav_msgs
  DEPENDS Eigen
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
  include
  ${catkin_INCLUDE_DIRS}
  ${Eigen_INCLUDE_DIRS}
)

## Declare a C++ library
# add_library(${PROJECT_NAME}
#   src/${PROJECT_NAME}/vehicle_control.cpp
# )

####################
## PID Executable ##
####################

add_executable(vehicle_control src/ros_control_node.cpp src/pid_controller.cpp)
add_dependencies(vehicle_control vehicle_control_generate_message_cpp ${${custom_messages_biggie}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
target_link_libraries(vehicle_control ${catkin_LIBRARIES})

# With dynamic_reconfigure for the PID gains
add_executable(vehicle_control_dyn src/ros_control_node_dyn.cpp src/pid_controller_dyn.cpp)
add_dependencies(vehicle_control_dyn vehicle_control_generate_message_cpp ${${custom_messages_biggie}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS} ${PROJECT_NAME}_gencfg)
target_link_libraries(vehicle_control_dyn ${catkin_LIBRARIES})

######################
## SM_SK Executable ##
######################

add_executable(sm_sk_control src/sliding_mode_station_keeping_main.cpp src/sliding_mode_station_keeping.cpp)
add_dependencies(sm_sk_control vehicle_control_generate_message_cpp ${${custom_messages_biggie}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
target_link_libraries(sm_sk_control ${catkin_LIBRARIES})
